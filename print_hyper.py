import numpy as np
from qif import *

'''
Takes as input a channel c and a distribution pi
and pretty prints the hyper distribution generated by these two, 
with the extra option of highlighting the maximum elements of each column
'''

def print_hyper(c, pi, highlight_maxima=False):
    h = channel.hyper(c, pi)
    
    dashes = '-' * (7 * len(h[0]) - 1)
    print(dashes)
    
    p_y = h[0]
    print("| ", end='')
    for i in range(len(p_y)):
        print("%.2f " % p_y[i], end='')
    print("|")
    print(dashes)

    posteriors = h[1]
    for i in range(len(posteriors)):
        print("| ", end='')
        for j in range(len(posteriors[i])):
            if highlight_maxima and posteriors[i][j] == max(np.transpose(posteriors)[j]):
                print("\033[1m%.2f\033[0m " % posteriors[i][j], end='')
            else:
                print("%.2f " % posteriors[i][j], end='')
        print("|")    
    print(dashes)